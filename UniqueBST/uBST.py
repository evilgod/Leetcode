class Solution:
    # @return an integer
    #===========================================================================
#===============================================================================
#         1          1         2            3          3
#          \          \       / \          /          /  
#           2          3     1   3        2          1 
#            \        /                    \          \
#             3      2                      1          2
# 
# L:R nod 0:2         0:2      1:1          2:0        2:0
#===============================================================================
    # C[n]= number of unique tree
    # C[3]=C[0]*C[2]+
    #      C[1]*C[1]+
    #      C[2]*C[0]
    #===========================================================================
    
    def numTrees(self, n):               
        if n==0 or n ==1:
            return 1
        
        count=[0]*(n+1)
        count[0]=1
        count[1]=1
        
        for i in range(2,n+1):         
            for j in range(i):
                count[i]=count[i]+count[j]*count[i-j-1]
        
        return count[n]